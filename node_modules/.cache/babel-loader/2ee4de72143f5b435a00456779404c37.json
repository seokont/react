{"ast":null,"code":"import React from\"react\";import{compose}from\"redux\";import{connect}from\"react-redux\";import Getplayers from\"./Getplayers\";import{authPlayersThunk,authSessionThunk,getObj}from\"../../Reducer/getplayers-reducer\";import{eddPlayerThunk,editPlayerThunkByObject}from\"../../Reducer/editplayer-reducer\";import{addPlayerForGamesResult}from\"../../Reducer/addplayer-reducer\";import{deletePlayerThunk}from\"../../Reducer/delplayer-reducer\";import{resetRakeAllThunk,resetRakeUserThunk,resetResultRakeOk}from\"../../Reducer/rsetrakeall-reducer\";import{authPlayersIpThunk}from\"../../Reducer/getplayersforip-reducer\";import{addImageCountryThunk}from\"../../Reducer/ipcountry-reducer\";import{addPlayerTokenThunk}from\"../../Reducer/auth-reducer\";import{addTotalRakeThunk}from\"../../Reducer/totalrake-reducer\";import{searchPlayersThunk}from\"../../Reducer/getplayers-reducer\";import AuthRedirectNoneToken from\"./../../Hoc/AuthRedirectNoneToken\";var mapStateToProps=function mapStateToProps(state){return{getplayers:state.GetPlayers.AllPlayers,getplayersOne:state.GetPlayers.PlayerOne,resultgetplayers:state.GetPlayers.Result,resultresetallrake:state.Resetrake.Result,resultresetallrakeok:state.Resetrake.ResultOk,resultBalance:state.Balance,getplayersobj:state.GetPlayers.Obj,getip:state.GetPlayersIp,getimg:state.GetCountryIp,token:state.Token,totalrake:state.TotalRake.TotalRake};};var GetplayersConteiner=compose(connect(mapStateToProps,{addPlayerTokenThunk:addPlayerTokenThunk,addImageCountryThunk:addImageCountryThunk,authPlayersIpThunk:authPlayersIpThunk,authSessionThunk:authSessionThunk,getObj:getObj,resetRakeUserThunk:resetRakeUserThunk,resetResultRakeOk:resetResultRakeOk,authPlayersThunk:authPlayersThunk,eddPlayerThunk:eddPlayerThunk,addPlayerForGamesResult:addPlayerForGamesResult,deletePlayerThunk:deletePlayerThunk,resetRakeAllThunk:resetRakeAllThunk,editPlayerThunkByObject:editPlayerThunkByObject,addTotalRakeThunk:addTotalRakeThunk,searchPlayersThunk:searchPlayersThunk}),AuthRedirectNoneToken)(Getplayers);export default GetplayersConteiner;","map":{"version":3,"sources":["F:/PROJECTTEXASROOM/po/src/Components/Getplayers/GetplayersConteiner.jsx"],"names":["React","compose","connect","Getplayers","authPlayersThunk","authSessionThunk","getObj","eddPlayerThunk","editPlayerThunkByObject","addPlayerForGamesResult","deletePlayerThunk","resetRakeAllThunk","resetRakeUserThunk","resetResultRakeOk","authPlayersIpThunk","addImageCountryThunk","addPlayerTokenThunk","addTotalRakeThunk","searchPlayersThunk","AuthRedirectNoneToken","mapStateToProps","state","getplayers","GetPlayers","AllPlayers","getplayersOne","PlayerOne","resultgetplayers","Result","resultresetallrake","Resetrake","resultresetallrakeok","ResultOk","resultBalance","Balance","getplayersobj","Obj","getip","GetPlayersIp","getimg","GetCountryIp","token","Token","totalrake","TotalRake","GetplayersConteiner"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,OAAR,KAAsB,OAAtB,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,OAAQC,gBAAR,CAA0BC,gBAA1B,CAA4CC,MAA5C,KAAyD,kCAAzD,CACA,OAAQC,cAAR,CAAwBC,uBAAxB,KAAsD,kCAAtD,CACA,OAAQC,uBAAR,KAAsC,iCAAtC,CACA,OAAQC,iBAAR,KAAgC,iCAAhC,CACA,OAAQC,iBAAR,CAA2BC,kBAA3B,CAA+CC,iBAA/C,KAAuE,mCAAvE,CACA,OAAQC,kBAAR,KAAiC,uCAAjC,CACA,OAAQC,oBAAR,KAAmC,iCAAnC,CACA,OAAQC,mBAAR,KAAkC,4BAAlC,CACA,OAAQC,iBAAR,KAAgC,iCAAhC,CACA,OAAQC,kBAAR,KAAiC,kCAAjC,CAGA,MAAOC,CAAAA,qBAAP,KAAkC,mCAAlC,CAGA,GAAIC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAY,CAC9BC,UAAU,CAAED,KAAK,CAACE,UAAN,CAAiBC,UADC,CAE9BC,aAAa,CAAEJ,KAAK,CAACE,UAAN,CAAiBG,SAFF,CAG9BC,gBAAgB,CAAEN,KAAK,CAACE,UAAN,CAAiBK,MAHL,CAI9BC,kBAAkB,CAAER,KAAK,CAACS,SAAN,CAAgBF,MAJN,CAK9BG,oBAAoB,CAAEV,KAAK,CAACS,SAAN,CAAgBE,QALR,CAM9BC,aAAa,CAAEZ,KAAK,CAACa,OANS,CAO9BC,aAAa,CAAEd,KAAK,CAACE,UAAN,CAAiBa,GAPF,CAQ9BC,KAAK,CAAChB,KAAK,CAACiB,YARkB,CAS9BC,MAAM,CAAClB,KAAK,CAACmB,YATiB,CAU9BC,KAAK,CAAEpB,KAAK,CAACqB,KAViB,CAW9BC,SAAS,CAACtB,KAAK,CAACuB,SAAN,CAAgBA,SAXI,CAAZ,EAAtB,CAgBA,GAAIC,CAAAA,mBAAmB,CAAG5C,OAAO,CAACC,OAAO,CAACkB,eAAD,CAAkB,CACvDJ,mBAAmB,CAAnBA,mBADuD,CAEvDD,oBAAoB,CAApBA,oBAFuD,CAGvDD,kBAAkB,CAAlBA,kBAHuD,CAIvDT,gBAAgB,CAAhBA,gBAJuD,CAKvDC,MAAM,CAANA,MALuD,CAMvDM,kBAAkB,CAAlBA,kBANuD,CAOvDC,iBAAiB,CAAjBA,iBAPuD,CAQvDT,gBAAgB,CAAhBA,gBARuD,CASvDG,cAAc,CAAdA,cATuD,CAUvDE,uBAAuB,CAAvBA,uBAVuD,CAWvDC,iBAAiB,CAAjBA,iBAXuD,CAYvDC,iBAAiB,CAAjBA,iBAZuD,CAavDH,uBAAuB,CAAvBA,uBAbuD,CAcvDS,iBAAiB,CAAjBA,iBAduD,CAevDC,kBAAkB,CAAlBA,kBAfuD,CAAlB,CAAR,CAgB9BC,qBAhB8B,CAAP,CAgBAhB,UAhBA,CAA1B,CAiBA,cAAe0C,CAAAA,mBAAf","sourcesContent":["import React from \"react\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport Getplayers from \"./Getplayers\";\r\nimport {authPlayersThunk, authSessionThunk, getObj} from \"../../Reducer/getplayers-reducer\";\r\nimport {eddPlayerThunk, editPlayerThunkByObject} from \"../../Reducer/editplayer-reducer\";\r\nimport {addPlayerForGamesResult} from \"../../Reducer/addplayer-reducer\";\r\nimport {deletePlayerThunk} from \"../../Reducer/delplayer-reducer\";\r\nimport {resetRakeAllThunk, resetRakeUserThunk, resetResultRakeOk} from \"../../Reducer/rsetrakeall-reducer\";\r\nimport {authPlayersIpThunk} from \"../../Reducer/getplayersforip-reducer\";\r\nimport {addImageCountryThunk} from \"../../Reducer/ipcountry-reducer\";\r\nimport {addPlayerTokenThunk} from \"../../Reducer/auth-reducer\";\r\nimport {addTotalRakeThunk} from \"../../Reducer/totalrake-reducer\";\r\nimport {searchPlayersThunk} from \"../../Reducer/getplayers-reducer\";\r\n\r\n\r\nimport AuthRedirectNoneToken from \"./../../Hoc/AuthRedirectNoneToken\";\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    getplayers: state.GetPlayers.AllPlayers,\r\n    getplayersOne: state.GetPlayers.PlayerOne,\r\n    resultgetplayers: state.GetPlayers.Result,\r\n    resultresetallrake: state.Resetrake.Result,\r\n    resultresetallrakeok: state.Resetrake.ResultOk,\r\n    resultBalance: state.Balance,\r\n    getplayersobj: state.GetPlayers.Obj,\r\n    getip:state.GetPlayersIp,\r\n    getimg:state.GetCountryIp,\r\n    token: state.Token,\r\n    totalrake:state.TotalRake.TotalRake\r\n\r\n\r\n})\r\n\r\nlet GetplayersConteiner = compose(connect(mapStateToProps, {\r\n    addPlayerTokenThunk,\r\n    addImageCountryThunk,\r\n    authPlayersIpThunk,\r\n    authSessionThunk,\r\n    getObj,\r\n    resetRakeUserThunk,\r\n    resetResultRakeOk,\r\n    authPlayersThunk,\r\n    eddPlayerThunk,\r\n    addPlayerForGamesResult,\r\n    deletePlayerThunk,\r\n    resetRakeAllThunk,\r\n    editPlayerThunkByObject,\r\n    addTotalRakeThunk,\r\n    searchPlayersThunk\r\n}),AuthRedirectNoneToken)(Getplayers);\r\nexport default GetplayersConteiner;\r\n"]},"metadata":{},"sourceType":"module"}